{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPKruzup47HmPpVErgnjcyp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":621,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4leZS3mkKPXZ","executionInfo":{"status":"ok","timestamp":1711358837115,"user_tz":-420,"elapsed":3213,"user":{"displayName":"Synithis","userId":"03957030646426939799"}},"outputId":"b3f7b622-50aa-44ba-d65c-754a44b2cf9a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive/; to attempt to forcibly remount, call drive.mount(\"/content/drive/\", force_remount=True).\n","/content/drive/MyDrive/DATA_UM\n"]}],"source":["## Load Folder Drive\n","import os, sys\n","from google.colab import drive\n","drive.mount('/content/drive/')\n","\n","## Move Pointer File ke DATA_UM\n","%cd /content/drive/MyDrive/DATA_UM\n","\n","## Declare Root Project File\n","root_file = \"/content/drive/MyDrive/DATA_UM\""]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","import re\n","import string\n","\n","import os.path\n","from os import path"],"metadata":{"id":"JP8XgKbrKUgh","executionInfo":{"status":"ok","timestamp":1711358837115,"user_tz":-420,"elapsed":3,"user":{"displayName":"Synithis","userId":"03957030646426939799"}}},"execution_count":622,"outputs":[]},{"cell_type":"code","source":["## Load Preprocess SLANG Module\n","\n","# Load Dataframe\n","df_tmp_nasalsabila = pd.read_csv('data/slang/colloquial-indonesian-lexicon_nasalsabila.csv')\n","df_slang_fendiirfan = pd.read_csv('data/slang/colloquial-indonesian-lexicon_fendiirfan.csv')\n","df_slang_custom = pd.read_csv('data/slang/custom_dictonary_slang.csv')\n","df_slang_custom_exception = pd.read_csv('data/slang/custom_dictonary_slang_dont_swap.csv')\n","df_slang_custom_stemming = pd.read_csv('data/slang/custom_dictonary_slang_stemming.csv')\n","\n","# Transform and Delete Duplicate Data from nasalsabila\n","df_slang_nasalsabila = df_tmp_nasalsabila[['slang', 'formal']]\n","df_slang_nasalsabila.drop_duplicates(inplace=True)\n","\n","# Transform and Delete Duplicate Data from fendiirfan\n","df_slang_fendiirfan.dropna(inplace=True)\n","df_slang_fendiirfan.rename(columns={'kataAlay': 'slang', 'kataBaik': 'formal'}, inplace=True)\n","df_slang_fendiirfan.drop_duplicates(inplace=True)\n","\n","# Transform and Delete Duplicate our own data.\n","df_slang_custom.drop_duplicates(inplace=True)\n","df_slang_custom_exception.drop_duplicates(inplace=True)\n","df_slang_custom_stemming.drop_duplicates(inplace=True)\n","\n","def remove_slang(text, df_tmp):\n","    # To Lowercase\n","    text = text.lower()\n","\n","    # Pecah to array\n","    words = text.split(\" \");\n","\n","    # DF to Array\n","    arr_slang = df_tmp['slang'].to_numpy()\n","    arr_formal = df_tmp['formal'].to_numpy()\n","    do_not_change = df_slang_custom_exception['kata'].to_numpy()\n","\n","    # Array New Text\n","    new_text = []\n","\n","    for kata in words:\n","      if kata in arr_slang:\n","        if kata not in do_not_change:\n","          idx = np.where(arr_slang==kata)[0][0]\n","          kata = arr_formal[idx]\n","\n","      new_text.append(kata)\n","      text_new = ' '.join(new_text)\n","\n","    return text_new"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pb1U7Ct0KXt1","executionInfo":{"status":"ok","timestamp":1711358837115,"user_tz":-420,"elapsed":3,"user":{"displayName":"Synithis","userId":"03957030646426939799"}},"outputId":"0384d6b8-3f9f-4f5a-9dd4-9538b95cffb6"},"execution_count":623,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-623-4e114e166bee>:12: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_slang_nasalsabila.drop_duplicates(inplace=True)\n"]}]},{"cell_type":"code","source":["## Load Preprocess Stemming Modul\n","# Load and Download Library Sastrawi\n","!pip install Sastrawi\n","from Sastrawi.StopWordRemover.StopWordRemoverFactory import StopWordRemoverFactory\n","\n","# Indonesian Stopword by Sastrawi\n","factory = StopWordRemoverFactory()\n","stopword = factory.create_stop_word_remover()\n","\n","# import StemmerFactory class\n","from Sastrawi.Stemmer.StemmerFactory import StemmerFactory\n","\n","# create stemmer\n","factory = StemmerFactory()\n","stemmer = factory.create_stemmer()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VxnnN7fiKbNO","executionInfo":{"status":"ok","timestamp":1711358844920,"user_tz":-420,"elapsed":7807,"user":{"displayName":"Synithis","userId":"03957030646426939799"}},"outputId":"1ba83857-6dea-4941-ac53-4a7b1fdb5de8"},"execution_count":624,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: Sastrawi in /usr/local/lib/python3.10/dist-packages (1.0.1)\n"]}]},{"cell_type":"code","source":["## Load Preprocess Stopword Data\n","\n","# Load Data Stopword from Sastrawi\n","from Sastrawi.StopWordRemover.StopWordRemoverFactory import StopWordRemoverFactory\n","factory = StopWordRemoverFactory()\n","stopword = factory.create_stop_word_remover()\n","\n","# Load Data Stopword and Custom Word\n","stopword_satya = list(pd.read_csv('data/stopword/stopwords_satya.txt', header = None)[0])\n","custom_stopword = list(pd.read_csv('data/stopword/custom_stopword.txt', header = None)[0])\n","keep_custom_stopword = list(pd.read_csv('data/stopword/keep_custom_stopword.txt', header = None)[0])\n","\n","# Declare Function / Modul Stopword\n","def remove_stopwords(text):\n","  # Removal Stopword\n","  text_split = text.split(' ')\n","\n","  temp_text_split = []\n","  for i in range(len(text_split)):\n","    ## Remove Stopword by Satwa : gak dipake dulu ini terlalu ngilangin konteks text\n","    #if (text_split[i] not in stopword_satya) and (text_split[i] not in custom_stopword):\n","    if (text_split[i] not in custom_stopword):\n","      ## Keep Beberapa Kata Valence of a text\n","      # https://datascience.stackexchange.com/questions/15765/nlp-why-is-not-a-stop-word#:~:text=Stop%20words%20are%20usually%20thought,idf%20analysis%20for%20document%20classification).\n","      if (text_split[i] in keep_custom_stopword) :\n","        temp_text_split.append(text_split[i])\n","      else :\n","        ## Stopword Removal from data by Sastrawi\n","        tmp = stopword.remove(text_split[i])\n","        temp_text_split.append(tmp)\n","\n","  final_text = ' '.join(temp_text_split)\n","\n","  # will replace single word\n","  final_text = re.sub(r\"\\b[a-zA-Z]\\b\",\"\",final_text)\n","\n","  # will replace space more than one\n","  final_text = re.sub(\"( {2,})\",\" \",final_text)\n","\n","  return final_text"],"metadata":{"id":"85pC32sdKc78","executionInfo":{"status":"ok","timestamp":1711358844920,"user_tz":-420,"elapsed":9,"user":{"displayName":"Synithis","userId":"03957030646426939799"}}},"execution_count":625,"outputs":[]},{"cell_type":"code","source":["def clean_text_predict(text) :\n","\n","    text = str(text)\n","\n","    ## TEXT TRANSFORM\n","    # Replace TAB with space\n","    text = text.replace('\\t', ' ')\n","\n","    # Remove username 1st\n","    text = re.sub('@[^\\s]+','',text)\n","\n","    # Remove hashtag dan @\n","    #''.join(re.sub(\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\/\\/\\S+)\",\" \",text).split())\n","\n","    # Change \"-\" to space\n","    text = text.replace(\"-\", \" \")\n","\n","    # Remove punctiation wihtout underscore\n","    pattern = r'[^\\w\\s\\/\\']'\n","    text = re.sub(pattern, ' ', text)\n","    text = text.replace(\"_\", \" \")\n","    # translator = re.compile('[%s]' % re.escape('!\"#$%&\\'()*+,-.:;<=>?@[\\\\]^_`{|}~'))\n","    # translator.sub(' ', text)\n","\n","    # Save Special Character\n","    text = text.replace(\"/\", \" bimzslash \")\n","\n","    # Remove angka\n","    #text = re.sub('[0-9]+', '', text)\n","\n","    # Remove website link\n","    text = re.sub(r'http\\S+', '', text)\n","\n","    # Remove new line\n","    text = re.sub(\"\\n\",\" \",text)\n","\n","    # Transform to lowercase\n","    text = text.lower()\n","\n","    # Slang change for spesific case (gg, dll yang menghapus multi same char)\n","    text = remove_slang(text ,df_slang_custom)\n","\n","    # Replace perulangan huruf pada kalimat \"iyaaa\" to \"iya\"\n","    #text = re.sub(r'(\\w)(\\1{2,})', r\"\\1\", text) #removing number and letters\n","    text = re.sub(r'([a-zA-Z])(\\1{2,})', r\"\\1\", text) #only remove number\n","\n","    # will replace single word\n","    text = re.sub(r\"\\b[a-zA-Z]\\b\",\"\",text)\n","\n","    # will replace space more than one\n","    text = re.sub('( {2,})',' ',text)\n","\n","    ## SLANG\n","    text = remove_slang(text ,df_slang_custom)\n","    text = remove_slang(text ,df_slang_nasalsabila)\n","    text = remove_slang(text ,df_slang_fendiirfan)\n","\n","    ## STEMMING\n","    text = stemmer.stem(text)\n","\n","    ## STOPWORD\n","    text = remove_stopwords(text)\n","\n","    ## ROLL BACK STEMMING\n","    text = remove_slang(text ,df_slang_custom_stemming)\n","\n","    ## TEXT TRANSFORM BUT AFTER\n","    # will replace single word\n","    # text = re.sub(r\"\\b[a-zA-Z]\\b\",\"\",text)\n","\n","    return text"],"metadata":{"id":"DktNrWqhKeiA","executionInfo":{"status":"ok","timestamp":1711358982984,"user_tz":-420,"elapsed":377,"user":{"displayName":"Synithis","userId":"03957030646426939799"}}},"execution_count":635,"outputs":[]},{"cell_type":"code","source":["review_text = '1000/10 ultra x bimz'\n","txt_clean = clean_text_predict(review_text)\n","txt_clean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"myTasRO7KgRU","executionInfo":{"status":"ok","timestamp":1711358983910,"user_tz":-420,"elapsed":4,"user":{"displayName":"Synithis","userId":"03957030646426939799"}},"outputId":"7c7c64f8-d0a6-4bbc-9311-85ab6f1aef4a"},"execution_count":636,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1000 / 10 ultra x bimz'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":636}]}]}